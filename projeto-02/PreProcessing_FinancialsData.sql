-- CRIANDO UM BANCO DE DADOS PARA RECEBER A IMPORTAÇÃO DA NOSSA BASE DE DADOS
CREATE DATABASE DBFINANCIALS;

-- PARA IMPORTAR OS DADOS, UTILIZAMOS AS TAREFAS NATIVAS DO SQLSERVER

/* SIGA OS PASSOS ABAIXO PARA IMPORTAR DADOS DE FORMA INTERATIVA */

-- 1 - APÓS A CRIAÇÃO BANCO CLICAMOS COM O BOTAO DIREITO NO BANCO QUE RECEBRÁ A IMPORTAÇÃO
-- 2 - CLICAMOS EM TAREFAS
-- 3 - IMPORTAR DADOS
-- 4 - ESCOLHEMOS A FONTE DE DADOS (NO NOSSO CASO PASTA DE ARQUIVO DO EXCEL)
-- 5 - ESSA VERSAO DO SQLSERVER SÓ ACEITA ATÉ A VERSÃO 2007 DO EXCEL, ENTAO SALVAMOS NO TIPO DE ARQUIVO SUPORTADO
-- 6 - SELECIONAMOS AS PRIMEIRAS COLUNAS COMO CABEÇALHO
-- 7 -  PRECISAMO SELECIONAR UM DESTINO
-- 8 - O DESTINO É Microsoft OLE DB Provider for SQL Server
-- 9 - ESCOLHEMOS O NOME DO SERVIDOR, TIPO DE AUTENTICAÇÃO E O BANCO DE DADOS QUE RECEBERÁ ESSES DADOS
-- 10 - COPIAR DADOS DE UMA OU MAIS TABELAS
-- 11 - SELECIONAMOS AS TABELAS QUE DESEJAMOS IMPORTAR, E PODEMOS RENOMEAR COMO ELA FICARÁ GRAVADA NO BANCO DE DADOS

-- CONECTANDO AO BANCO DE DADOS
USE DBFINANCIALS;

-- ANÁLISE EXPLORATÓRIA PELO CONJUNTO DE DADOS

-- EXSITEM COLUNAS QUE POSSUEM ESPAÇOS NOS NOMES, LOGO PODEMOS TER PROBLEMAS PARA ACESSAR AS MESMAS

SELECT 
    TABLE_NAME,
    COLUMN_NAME
FROM 
    INFORMATION_SCHEMA.COLUMNS
WHERE 
    COLUMN_NAME LIKE '% %';

-- Month Number POSSUI ESPAÇOS SOMENTE ENTRE AS PALAVRAS MAS NÃO NO INICIO E FIM, SEM NECESSIDADE DE TRATAMENTO

-- TRATANDO NOMES DE COLUNAS COM ESPAÇO DESNCESSÁRIO
EXEC sp_rename 'FINANCIALS.  Sales ', 'Sales', 'COLUMN';
EXEC sp_rename 'FINANCIALS. COGS ', 'COGS', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Discount Band ', 'Discount Band', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Discounts ', 'Discounts', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Gross Sales ', 'Gross Sales', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Manufacturing Price ', 'Manufacturing Price', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Month Name ', 'Month Name', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Product ', 'Product', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Profit ', 'Profit', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Sale Price ', 'Sale Price', 'COLUMN';
EXEC sp_rename 'FINANCIALS. Units Sold ', 'Units Sold', 'COLUMN';

-- OBSERVANDO AS COLUNAS COM DADOS QUE PRECISAM DE ALGUM TRATAMENTO

SELECT TOP 10 [Segment]
      ,[Country]
      ,[Product]
      ,[Discount Band]
      ,[Units Sold]
      ,[Manufacturing Price]
      ,[Sale Price]
      ,[Gross Sales]
      ,[Discounts]
      ,[Sales]
      ,[COGS]
      ,[Profit]
      ,[Date]
      ,[Month Number]
      ,[Month Name]
      ,[Year]
  FROM [DBFINANCIALS].[dbo].[Financials];

/* EM UM PRIMEIRO MOMENTO OBSERVAMOS QUE EXISTEM COLUNAS QUE POSSUEM CARACTERES QUE ESTÃO POLUINDO OS DADOS
LOGO AS MESMAS PRECISAM SER TRATADAS */

-- ANALISANDO ESPAÇOS E CARACTERES INUTEIS DENTRO DAS COLUNAS DE FINANCIALS

-- SEGMENT
SELECT [Segment]
FROM FINANCIALS
WHERE [Segment] <> LTRIM(RTRIM([Segment]));

-- COUNTRY 
SELECT [Country]
FROM FINANCIALS
WHERE [Country] <> LTRIM(RTRIM([Country]));

-- A COLUNA PRODUCT POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS
SELECT [Product]
FROM FINANCIALS
WHERE [Product] <> LTRIM(RTRIM([Product]));

-- A COLUNA DISCOUNT BAND POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS
SELECT [Discount Band]
FROM FINANCIALS
WHERE [Discount Band] <> LTRIM(RTRIM([Discount Band]));

-- A COLUNA UNITS SOLD POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS, ALÉM DE $ QUE PRECISAMOS RETIRAR
SELECT [Units Sold]
FROM FINANCIALS
WHERE [Units Sold] <> LTRIM(RTRIM([Units Sold]));

-- A COLUNA MANUFACTURING PRICE POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS, ALÉM DE $ QUE PRECISAMOS RETIRAR
SELECT [Manufacturing Price]
FROM FINANCIALS
WHERE [Manufacturing Price] <> LTRIM(RTRIM([Manufacturing Price]));

-- A COLUNA SALE PRICE POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS, ALÉM DE $ QUE PRECISAMOS RETIRAR
SELECT [Sale Price]
FROM FINANCIALS
WHERE [Sale Price] <> LTRIM(RTRIM([Sale Price]));

-- A COLUNA GROSS SALES POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS, ALÉM DE $ QUE PRECISAMOS RETIRAR
SELECT [Gross Sales]
FROM FINANCIALS
WHERE [Gross Sales] <> LTRIM(RTRIM([Gross Sales]));

-- A COLUNA DISCOUNTS POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS, ALÉM DE $ E - QUE PRECISAMOS RETIRAR
SELECT [Discounts]
FROM FINANCIALS
WHERE [Discounts] <> LTRIM(RTRIM([Discounts]));

-- A COLUNA SALES POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS, ALÉM DE $ QUE PRECISAMOS RETIRAR
SELECT [Sales]
FROM FINANCIALS
WHERE [Sales] <> LTRIM(RTRIM([Sales]));

-- A COLUNA COGS POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS, ALÉM DE $ QUE PRECISAMOS RETIRAR
SELECT [COGS]
FROM FINANCIALS
WHERE [COGS] <> LTRIM(RTRIM([COGS]));

-- A COLUNA PROFIT POSSUI ESPAÇOS DESNECESSARIOS DENTRO DOS SEUS DADOS, ALÉM DE $ QUE PRECISAMOS RETIRAR
SELECT [Profit]
FROM FINANCIALS
WHERE [Profit] <> LTRIM(RTRIM([Profit]));

-- DATE
SELECT [Date]
FROM FINANCIALS
WHERE [Date] <> LTRIM(RTRIM([Date]));

-- MONTH NUMBER
SELECT [Month Number]
FROM FINANCIALS
WHERE [Month Number] <> LTRIM(RTRIM([Month Number]));

-- YEAR
SELECT [Year]
FROM FINANCIALS
WHERE [Year] <> LTRIM(RTRIM([Year]));

/* EXISTEM COLUNAS QUE ALEM DE CARACTERES QUE AFETAM A OBTENÇÃO DE INSIGHTS, POSSUEM TAMBÉM ESPAÇOS DESNECESSÁRIOS
MAIS ESPECIFICAMENTE NO INICIO E FIM DE DIVERSOS DADOS EM DIVERSAS COLUNAS, IREMOS TRATAR CADA UMA DESSAS INCONSISTÊNCIAS,
GARANTINDO UMA MAIOR QUALIDADE DOS DADOS*/

/* COLUNAS A SEREM TRATADAS:
	[Product] - ESPAÇOS
	[Discount Band] - ESPAÇOS
	[Units Sold] - ESPAÇOS + CARACTERE $
	[Manufacturing Price] - ESPAÇOS + CARACTERE $
	[Sale Price] - ESPAÇOS + CARACTERE $
	[Gross Sales] - ESPAÇOS + CARACTERE $
	[Discounts] - ESPAÇOS + CARACTERES $ E -
	[Sales] - ESPAÇOS + CARACTERE $
	[COGS] - ESPAÇOS + CARACTERE $
	[Profit]  - ESPAÇOS + CARACTERE $
*/

-- TRATANDO COLUNA PRODUCT
SELECT [PRODUCT] FROM FINANCIALS
WHERE [PRODUCT] <> LTRIM(RTRIM([PRODUCT]));

-- REMOVENDO ESPAÇOS DESNCECESSÁRIOS DO INICIO E FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [PRODUCT] = LTRIM(RTRIM([PRODUCT]))
WHERE [PRODUCT] IS NOT NULL;

COMMIT TRAN;

-- TRATANDO COLUNA DISCOUNT BAND
SELECT [DISCOUNT BAND] FROM FINANCIALS
WHERE [DISCOUNT BAND] <> LTRIM(RTRIM([DISCOUNT BAND]));

-- REMOVENDO ESPAÇOS DESNCECESSÁRIOS DO INICIO E FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [DISCOUNT BAND] = LTRIM(RTRIM([DISCOUNT BAND]))
WHERE [DISCOUNT BAND] IS NOT NULL;

COMMIT TRAN;

-- TRATANDO UNITS SOLD
SELECT [UNITS SOLD] FROM FINANCIALS;

-- REMOVENDO '$' E OS ESPAÇOS(DESNECESSARIOS) DO INICIO E O FIM
-- NESSE CASO REMOVEMOS DESSA FORMA POIS $ ESTAVA PRESENTE EM TODOS AS OCORRÊNCIAS
BEGIN TRAN;

UPDATE FINANCIALS
SET [UNITS SOLD] = SUBSTRING(LTRIM(RTRIM(([UNITS SOLD]))), 2, LEN([UNITS SOLD]) - 3)
WHERE [UNITS SOLD] IS NOT NULL AND LEN([UNITS SOLD]) > 0;

SELECT [UNITS SOLD] FROM FINANCIALS
WHERE [UNITS SOLD] LIKE ' %' OR [UNITS SOLD] LIKE '% ';

COMMIT TRAN;

-- SUBSTITUINDO SEPARADOR DECIMAL(A VIRGULA USADA NA TABELA PODE NOS PROPORCIONAR ERROS EM CONVERSAO DE TIPO)
BEGIN TRAN;

UPDATE FINANCIALS
SET [UNITS SOLD] = REPLACE([UNITS SOLD], ',', '')
WHERE [UNITS SOLD] IS NOT NULL;

COMMIT TRAN;

-- TRATANDO MANUFACTURING PRICE
SELECT [MANUFACTURING PRICE] FROM FINANCIALS;

-- REMOVENDO '$' E OS ESPAÇOS(DESNECESSARIOS) DO INICIO E O FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [MANUFACTURING PRICE] = REPLACE(LTRIM(RTRIM([MANUFACTURING PRICE])), '$', '')
WHERE [MANUFACTURING PRICE] IS NOT NULL;

SELECT [MANUFACTURING PRICE] FROM FINANCIALS
WHERE [MANUFACTURING PRICE] LIKE ' %' OR [MANUFACTURING PRICE] LIKE '% ';

COMMIT TRAN;

-- TRATANDO SALE PRICE
SELECT [SALE PRICE] FROM FINANCIALS;

-- REMOVENDO '$' E OS ESPAÇOS(DESNECESSARIOS) DO INICIO E O FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [SALE PRICE] = REPLACE(LTRIM(RTRIM([SALE PRICE])), '$', '')
WHERE [SALE PRICE] IS NOT NULL;

SELECT [SALE PRICE] FROM FINANCIALS
WHERE [SALE PRICE] LIKE ' %' OR [SALE PRICE] LIKE '% ';

COMMIT TRAN;

-- TRATANDO GROSS SALES
SELECT [GROSS SALES] FROM FINANCIALS;

-- REMOVENDO '$' E OS ESPAÇOS(DESNECESSARIOS) DO INICIO E O FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [GROSS SALES] = REPLACE(LTRIM(RTRIM([GROSS SALES])), '$', '')
WHERE [GROSS SALES] IS NOT NULL;

SELECT [GROSS SALES] FROM FINANCIALS
WHERE [GROSS SALES] LIKE ' %' OR [GROSS SALES] LIKE '% ';

COMMIT TRAN;

-- SUBSTITUINDO SEPARADOR DECIMAL(A VIRGULA USADA NA TABELA PODE NOS PROPORCIONAR ERROS EM CONVERSAO DE TIPO)
BEGIN TRAN;

UPDATE FINANCIALS
SET [GROSS SALES] = REPLACE([GROSS SALES], ',', '')
WHERE [GROSS SALES] IS NOT NULL;

COMMIT TRAN;

-- TRATANDO DISCOUNTS
SELECT [DISCOUNTS] FROM FINANCIALS;

-- REMOVENDO '$' E OS ESPAÇOS(DESNECESSARIOS) DO INICIO E O FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [DISCOUNTS] = REPLACE(LTRIM(RTRIM([DISCOUNTS])), '$', '')
WHERE [DISCOUNTS] IS NOT NULL;

SELECT [DISCOUNTS] FROM FINANCIALS
WHERE [DISCOUNTS] LIKE ' %' OR [DISCOUNTS] LIKE '% ';

COMMIT TRAN;

-- ONDE '-' ENTENDEMOS QUE NÃO OUVE DESCONTO, LOGO DISCOUNT = 0
BEGIN TRAN;

UPDATE FINANCIALS
SET [DISCOUNTS] = REPLACE([DISCOUNTS], '-', '0')
WHERE [DISCOUNTS] IS NOT NULL;
COMMIT TRAN;

-- SUBSTITUINDO SEPARADOR DECIMAL(A VIRGULA USADA NA TABELA PODE NOS PROPORCIONAR ERROS EM CONVERSAO DE TIPO)
BEGIN TRAN;

UPDATE FINANCIALS
SET [DISCOUNTS] = REPLACE([DISCOUNTS], ',', '')
WHERE [DISCOUNTS] IS NOT NULL;

COMMIT TRAN;

-- TRATANDO SALES
SELECT [SALES] FROM FINANCIALS;

-- REMOVENDO '$' E OS ESPAÇOS(DESNECESSARIOS) DO INICIO E O FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [SALES] = REPLACE(LTRIM(RTRIM([SALES])),'$','')
WHERE [SALES] IS NOT NULL;

SELECT [SALES] FROM FINANCIALS
WHERE [SALES] LIKE ' %' OR [SALES] LIKE '% ';

COMMIT TRAN;

-- SUBSTITUINDO SEPARADOR DECIMAL(A VIRGULA USADA NA TABELA PODE NOS PROPORCIONAR ERROS EM CONVERSAO DE TIPO)
BEGIN TRAN;

UPDATE FINANCIALS
SET [SALES] = REPLACE([SALES], ',','')
WHERE [SALES] IS NOT NULL;

COMMIT TRAN;

-- TRATANDO COGS
SELECT [COGS] FROM FINANCIALS;

-- REMOVENDO '$' E OS ESPAÇOS(DESNECESSARIOS) DO INICIO E O FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [COGS] = REPLACE(LTRIM(RTRIM([COGS])),'$','')
WHERE [COGS] IS NOT NULL;

SELECT [COGS] FROM FINANCIALS
WHERE [COGS] LIKE ' %' OR [COGS] LIKE '% ';

COMMIT TRAN

-- SUBSTITUINDO SEPARADOR DECIMAL(A VIRGULA USADA NA TABELA PODE NOS PROPORCIONAR ERROS EM CONVERSAO DE TIPO)
BEGIN TRAN;

UPDATE FINANCIALS
SET [COGS] = REPLACE([COGS],',','')
WHERE [COGS] IS NOT NULL;

COMMIT TRAN;

-- TRATANDO PROFIT
SELECT [PROFIT] FROM FINANCIALS;

-- REMOVENDO '$' E OS ESPAÇOS(DESNECESSARIOS) DO INICIO E O FIM
BEGIN TRAN;

UPDATE FINANCIALS
SET [PROFIT] = REPLACE(LTRIM(RTRIM([PROFIT])),'$','')
WHERE [PROFIT] IS NOT NULL;

SELECT [PROFIT] FROM FINANCIALS
WHERE [PROFIT] LIKE ' %' OR PROFIT LIKE '% '

COMMIT TRAN;

-- SUBSTITUINDO SEPARADOR DECIMAL(A VIRGULA USADA NA TABELA PODE NOS PROPORCIONAR ERROS EM CONVERSAO DE TIPO)
BEGIN TRAN;

UPDATE FINANCIALS
SET [PROFIT] = REPLACE([PROFIT], ',', '')
WHERE [PROFIT] IS NOT NULL;

COMMIT TRAN;

-- REMOVENDO - ISO INDICA QUE NAÕ HA UM VALOR NUMERICO ASSOCIADO E, PORTANTO, NAO REPRESENTA UM LUCRO OU PREJUIZO
BEGIN TRAN;

UPDATE FINANCIALS
SET [PROFIT] = '0'
WHERE [PROFIT] = '-';

COMMIT TRAN;

-- TRANSFORMANDO NUMEROS EM PARENTESES (NUMEROS NEGATIVOS) EM UM FORMATO QUE ACEITE COERÇAO DE TIPO PARA NUMERICO
BEGIN TRAN;

UPDATE FINANCIALS
SET [PROFIT] = '-' + [PROFIT]
WHERE [PROFIT] LIKE '(%)'

UPDATE FINANCIALS
SET [PROFIT] = REPLACE([PROFIT], '(', '')
WHERE [PROFIT] LIKE '(%';

UPDATE FINANCIALS
SET [PROFIT] = REPLACE([PROFIT], ')', '')
WHERE [PROFIT] LIKE '%)';

COMMIT TRAN;

-- ANALISANDO A COMPOSICAO DOS TIPOS DE DADOS DAS COLUNAS DA TABELA

EXEC sp_help 'FINANCIALS';

/* É DESSA FORMA QUE NOSSOS DADOS ESTAO TIPADOS
Segment				nvarchar
Country				nvarchar
Product				nvarchar
Discount Band		nvarchar
Units Sold			nvarchar
Manufacturing Price	nvarchar
Sale Price			nvarchar
Gross Sales			nvarchar
Discounts			nvarchar
Sales				nvarchar
COGS				nvarchar
Profit				nvarchar
Date				datetime
Month Number		float
Month Name			nvarchar
Year				float
*/

-- PRECISAMOS ALTERAR COLUNAS NUMERICAS PARA PODER FAZER CALCULOS E COMPARAÇOES
/* COLUNAS QUE NECESSITAM DE ALTERAÇÃO DE TIPO:
	Units Sold
	Manufacturing Price
	Sale Price
	Gross Sales
	Discounts
	Sales
	COGS
	Profit
*/

-- UNITS SOLD
BEGIN TRAN;

ALTER TABLE FINANCIALS
ALTER COLUMN [UNITS SOLD] FLOAT;

COMMIT TRAN;

-- MANUFACTURING PRICE
BEGIN TRANSACTION;

ALTER TABLE FINANCIALS
ALTER COLUMN [MANUFACTURING PRICE] FLOAT;

COMMIT TRAN;

-- SALE PRICE
BEGIN TRANSACTION;

ALTER TABLE FINANCIALS
ALTER COLUMN [SALE PRICE] FLOAT;

COMMIT TRAN;

-- GROSS SALES
BEGIN TRANSACTION;

ALTER TABLE FINANCIALS
ALTER COLUMN [GROSS SALES] FLOAT;

COMMIT TRAN;

-- DISCOUNTS
BEGIN TRANSACTION;

ALTER TABLE FINANCIALS
ALTER COLUMN [DISCOUNTS] FLOAT;

COMMIT TRAN;

-- SALES
BEGIN TRANSACTION;

ALTER TABLE FINANCIALS
ALTER COLUMN [SALES] FLOAT;

COMMIT TRAN;

-- COGS
BEGIN TRANSACTION;

ALTER TABLE FINANCIALS
ALTER COLUMN [COGS] FLOAT;

COMMIT TRAN;

-- PROFIT
BEGIN TRANSACTION;

ALTER TABLE FINANCIALS
ALTER COLUMN [PROFIT] FLOAT;

COMMIT TRAN;

-- CRIACAO DE VIEW PARA ENVIAR PARA O POWER BI
CREATE VIEW VW_PROCESSED_FINANCIALS AS
SELECT
	   [Segment]
      ,[Country]
      ,[Product]
      ,[Discount Band]
      ,[Units Sold]
      ,[Manufacturing Price]
      ,[Sale Price]
      ,[Gross Sales]
      ,[Discounts]
      ,[Sales]
      ,[COGS]
      ,[Profit]
      ,[Date]
      ,[Month Number]
      ,[Month Name]
      ,[Year]
 FROM FINANCIALS;


